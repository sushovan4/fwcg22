---
title: "Distance Measures for Geometric Graphs"
subtitle: FWCG 2022
author: "<span style='color:red'>Sush</span>ovan Majhi, UC Berkeley<br>Carola Wenk, Tulane University"
format: 
    revealjs:
        theme: dark
        slide-number: true
        self-contained: true
        incremental: true
bibliography: references.bib
---

## This Morning's Agenda
- Motivation
- What is a *Geometric Graph*?
- Why defining a similarity measure for them is challenging?
- The two friends: *GED* and *GGD*
- How the two measures compare?
- Computational complexity results
- Questions?

## Motivation

- Graphs representaion facilitates easy desciption of relational patterns
- Pattern Recognition becomes the problem of measuring similarity between two
graphs
- A distance measure is deemed *meaningful* if
    - small distance implies similarity
    - large distance reveals disparity

- Graph comaprison has been widely studied both by the *Pattern Recognition* and *Database* community.
    - Geometric graphs are new! [@cgkss-msgg-09]



## Geometric Graphs $\mathbb{R}^d$
A combinatorial graph $G=(V,E)$ is called *geometric* if  

- $V\subset\mathbb{R}^d$  
- An edge $(u,v)\in E$ is identified with the line segment $\overline{uv}$ 
- edges intersect only at their endpoints

. . .

![](geometric.svg){fig-align="center"}

## Applications

### Letter Recognition 
![IAM [@da_vitoria_lobo_iam_2008]](sample.png)

## Applications
### Map Comaprison

::: {layout-ncol=2}

![](mahmuda.jpg)

![](sophia.jpg)

:::
Source: *mapconstruction.org [@mapconstructionorg]*

## How to Define Distance between Two Graphs?
Given two geometric graphs $G, H$:

- check if they are (combinatorial) isomorphic
    - not robust
    - not lenient to local, minor defects
- correct *small* defects, but at a *small* cost

## Geometric Edit Operations

- deletion (or insertion) of a vertex does not cost
- deletion (or insertion) of an edge costs $C_E$ times its length
- translation of a vertex costs $C_V$ times the displacment plus $C_E$ times
the total length changes in the incident edges.

. . . 

### An Example Edit Path
::: {layout-ncol=5}

![](0.png)

:::{.fragment}
![$C_E|u_1u_2|$](1.png)
:::

:::{.fragment}
![<span style='font-size: 0.7em'>$C_V|v_3-u_2|$<br> $+C_E||u_3v_3|-|u_2u_3||$</span>](2.png)
:::

:::{.fragment}
![<span style='font-size: 0.7em'>$C_V|u_3-v_2|$<br> $+C_E||v_2v_3|-|u_3v_3||$</span>](3.png)
:::

![](4.png)

:::

## Geometric Edit Distance (GED)
$$GED(G,H):=\inf cost(P),$$
where the infimum is taken over all edit paths from $G$ to $H$.


::: {.fragment}
#### Pros
- the notion is very intuitive
- GED is a metric for positive contants $C_V, C_E$.
:::

::: {.fragment}
#### Cons
- not computationally feasible
- infinitely many edit paths
- uncountable alphabet
:::

## Geometric Graph Distance (GGD)

#### Inexact Matching ($\pi$) and its Cost
- choose isomporhpic subgraphs $G',H'$ of $G,H$, respectively
- delete the rest and *pay* for it
- finally, *morph* $G'$ onto $H'$ and *pay* for it

. . .

![](pi.png){fig-align="center"}


## Geometric Graph Distance (GGD)

$$
GGD(G,H):=\min_{\text{matching }\pi}cost(\pi).
$$

- GGD is a metric
- computationally feasible

. . .

#### Fact:
$$GGD(G,H)\leq GED(G,H)\leq\left(1+\Delta\frac{C_E}{C_V}\right)GGD(G,H)$$

## Compexity of GGD
:::{.fragment}
### Known Results [@cgkss-msgg-09]
- NP-hard for highly non-planar instances
- NP-hard for planar graphs if $C_V<<C_E$
:::

:::{.fragment}
### Our Results
NP-hard even if  

- planar, and  
- $C_V,C_E$ arbitrary
:::

## What's Next??
- APX-hardness
- PTAS
- empirical evidence
- *learn* $C_V, C_E$

## Thanks
Email: <smajhi@berkeley.edu>

### References